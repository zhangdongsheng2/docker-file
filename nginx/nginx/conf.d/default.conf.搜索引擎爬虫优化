proxy_buffer_size 128k;
proxy_buffers 100 128k;

server {
        listen       80;
        server_name  thingsinfo.cn www.thingsinfo.cn;
		

	
        rewrite ^(.*)$ https://${server_name}$1 permanent;
        #其实应该配置到这里就可以了，将80端口的访问转发到443端口
        #charset koi8-r;
        #access_log  logs/host.access.log  main;

}

server {
        listen       443 ssl;
        server_name  thingsinfo.cn www.thingsinfo.cn;
		
	
        #ssl on;
        #配置证书的路径
        ssl_certificate      /etc/nginx/ssl/4173188_thingsinfo.cn.pem;
        ssl_certificate_key  /etc/nginx/ssl/4173188_thingsinfo.cn.key;
        #ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_ciphers  ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers  on;
       
        location = /googleeef53a8718ffd558.html {
	  root /etc/nginx/file;
	  index googleeef53a8718ffd558.html;
	}
	

	location = /baidu_verify_r36ZxE9Fbl.html {
	  root /etc/nginx/file;
	  index baidu_verify_r36ZxE9Fbl.html;
	}
        

	location / {
	    expires $expires;

		proxy_redirect                      off;
		proxy_set_header Host               $host;
		proxy_set_header X-Real-IP          $remote_addr;
		proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto  $scheme;
		proxy_read_timeout          1m;
		proxy_connect_timeout       1m;
		
		set $prerender 0;
		if ($http_user_agent ~* "baiduspider|Sogou web spider|360spider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
		  set $prerender 1;
		}
		if ($args ~ "_escaped_fragment_") {
		  set $prerender 1;
		}
		if ($http_user_agent ~ "Prerender") {
		  set $prerender 0;
		}
		if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
		  set $prerender 0;
		}
		
		if ($prerender = 1) {
                               #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
          #set $prerender "service.prerender.io";
          set $prerender "127.0.0.1:3003";
          rewrite ^(.+)$ /render/$scheme://$host$request_uri? break;
          #rewrite .* /$scheme://$host$request_uri? break;
          proxy_pass http://$prerender;
	#		proxy_pass http://127.0.0.1:3003/render/http://172.18.0.1:3000;
		}
			proxy_pass   http://127.0.0.1:3000; # set the address of the Node.js instance here

	}





}


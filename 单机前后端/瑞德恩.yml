version: '3.3'
# docker-compose restart base-api 重启服务端
# docker network create --driver=bridge --subnet=172.3.0.0/16 sjs-net
services:
  #服务端
  radiant-eureka:
    build: java/.
    container_name: radiant-eureka
    ports:
      - "7071:7071"
    networks:
      - sjs-net
    env_file:
      - common.env
    volumes:
      - ./radiant-eureka-2.1.4.RELEASE.jar:/app/app.jar  #打包的 jar 包按照名字放同级目录，然后重启服务


  #服务端
  radiant-config:
    build: java/.
    container_name: radiant-config
    ports:
      - "8761:8761"
    networks:
      - sjs-net
    env_file:
      - common.env
    volumes:
      - ./radiant-config-0.0.1-SNAPSHOT.jar:/app/app.jar  #打包的 jar 包按照名字放同级目录，然后重启服务


  #服务端
  radiant-gateway:
    build: java/.
    container_name: radiant-gateway
    ports:
      - "8020:8020"
    networks:
      - sjs-net
    env_file:
      - common.env
    volumes:
      - ./radiant-gateway-0.0.1-SNAPSHOT.jar:/app/app.jar  #打包的 jar 包按照名字放同级目录，然后重启服务




  #服务端
  radiant-cache:
    build: java/.
    container_name: radiant-cache
    ports:
      - "8083:8083"
    networks:
      - sjs-net
    env_file:
      - common.env
    volumes:
      - ./cache-0.0.1-SNAPSHOT.jar:/app/app.jar  #打包的 jar 包按照名字放同级目录，然后重启服务


  #服务端
  radiant-organ:
    build: java/.
    container_name: radiant-organ
    ports:
      - "9092:9092"
    networks:
      - sjs-net
    env_file:
      - common.env
    volumes:
      - ./radiant-organ-0.0.1-SNAPSHOT.jar:/app/app.jar  #打包的 jar 包按照名字放同级目录，然后重启服务


  #服务端
  radiant-online:
    build: java/.
    container_name: radiant-online
    ports:
      - "8087:8087"
    networks:
      - sjs-net
    env_file:
      - common.env
    volumes:
      - ./radiant-online-0.0.1-SNAPSHOT.jar:/app/app.jar  #打包的 jar 包按照名字放同级目录，然后重启服务



  #服务端
  radiant-monitor:
    build: java/.
    container_name: radiant-monitor
    ports:
      - "9091:9091"
    networks:
      - sjs-net
    env_file:
      - common.env
    volumes:
      - ./radiant-monitor-0.0.1-SNAPSHOT.jar:/app/app.jar  #打包的 jar 包按照名字放同级目录，然后重启服务


  #服务端
  radiant-home:
    build: java/.
    container_name: radiant-home
    ports:
      - "8089:8089"
    networks:
      - sjs-net
    env_file:
      - common.env
    volumes:
      - ./radiant-home-0.0.1-SNAPSHOT.jar:/app/app.jar  #打包的 jar 包按照名字放同级目录，然后重启服务


  #服务端
  radiant-manager:
    build: java/.
    container_name: radiant-manager
    ports:
      - "8030:8030"
    networks:
      - sjs-net
    env_file:
      - common.env
    volumes:
      - ./radiant-manager-0.0.1-SNAPSHOT.jar:/app/app.jar  #打包的 jar 包按照名字放同级目录，然后重启服务



  #服务端
  radiant-alarm:
    build: java/.
    container_name: radiant-alarm
    ports:
      - "9093:9093"
    networks:
      - sjs-net
    env_file:
      - common.env
    volumes:
      - ./radiant-alarm-1.1.0-SNAPSHOT.jar:/app/app.jar  #打包的 jar 包按照名字放同级目录，然后重启服务



  #服务端
  radiant-task:
    build: java/.
    container_name: radiant-task
    ports:
      - "9096:9096"
    networks:
      - sjs-net
    env_file:
      - common.env
    volumes:
      - ./radiant-task.jar:/app/app.jar  #打包的 jar 包按照名字放同级目录，然后重启服务


  #服务端
  radiant-sms:
    build: java/.
    container_name: radiant-sms
    ports:
      - "8081:8081"
    networks:
      - sjs-net
    env_file:
      - common.env
    volumes:
      - ./radiant-sms-0.0.1-SNAPSHOT.jar:/app/app.jar  #打包的 jar 包按照名字放同级目录，然后重启服务



  #前端
  radiant-web:
    build: nginx/.
    container_name: radiant-web
    networks:
      - sjs-net
    ports:
      - "82:80"
    env_file:
      - common.env
    volumes:
      - ./radiant-web:/usr/share/nginx/html  #打包好的文件放 web 文件夹中，然后刷新浏览器

  #前端
  radiant-bigscreen-vue:
    build: nginx/.
    container_name: radiant-bigscreen-vue
    networks:
      - sjs-net
    ports:
      - "83:80"
    env_file:
      - common.env
    volumes:
      - ./radiant-bigscreen-vue:/usr/share/nginx/html  #打包好的文件放 web 文件夹中，然后刷新浏览器




#自定义网络
networks:
  sjs-net:
    external: true








